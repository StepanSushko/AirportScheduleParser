if (!require("ggplot2")) { install.packages("ggplot2"); require("ggplot2") }
#if (!require("RCurl")) { install.packages("RCurl"); require("RCurl") }
if (!require("qdap")) { install.packages("qdap"); require("qdap") }
if (!require("rvest")) { install.packages("rvest"); require("rvest") }
OneDay_TimeTable = function(u, sDate) {      tables = read_html(u, encoding = "UTF-8")     dff = html_nodes(tables, "table")     df = html_table( dff[9], fill = T)[[1]]     df = df[-c(1:6), c(2:5)]     colnames( df ) = df[1,]     df = df[-c(1), ]     library(stringr)     df$`Авиакомпания` = str_split_fixed( df$`рейс`, ",", 2)[,2]     df$`рейс` = str_split_fixed(df$`рейс`, ",", 2)[, 1]     df$`Номер рейса` = apply(str_split_fixed(df$`рейс`, " ", 3)[, 1:2], MARGIN = 1, FUN = paste, collapse = " ")     #df$`рейс` = str_split_fixed(df$`рейс`, " ", 3)[, 3]     #df$`рейс` = str_split_fixed(df$`рейс`, " ", 2)[, 3]     #df$`рейс` = str_split_fixed(df$`рейс`, " — ", 2)[,2]     df_div3 = html_nodes(tables, xpath = '//*[@class="b-timetable__tripname"]')     #str_split_fixed(html_text(html_nodes(df_div3, "a")), " — ", 3)[1, 1]     df$`Направление` = str_split_fixed( html_text(html_nodes(df_div3, "a")), " — ", 3)[, 2]     df_div4 = html_nodes(tables, xpath = '//*[@class="b-timetable__description"]')     df$`Самолёт` = str_split_fixed( html_text( df_div4 ), ", ", 2)[, 1]     #df = df[ , c(7,5,2,6, 8)]     df$`расписание`[1] = strsplit(df$`расписание`[1], ", ")[[1]][1]     df$`расписание` = as.POSIXlt(paste( sDate, df$`расписание`))     return(df) }
OneWeek_TimeTable = function(station) {     df = NULL     for(i in c(1:7))         {         cat(".",i,".")         df_tmp = OneDay_TimeTable(             paste("https://rasp.yandex.ru/station/",station,"?start=", Sys.Date() + 1 + i, "T00%3A00%3A00&span=24", sep = ""),             Sys.Date() + 3 + i)         df = rbind(df, df_tmp)     }     A320_1 = "Airbus A320"     A320_2 = "Airbus А320"     df$`Самолёт`[df$`Самолёт` == A320_2] = A320_1     return(df) }
df  = OneWeek_TimeTable("9866615")
df  = OneWeek_TimeTable("9866615")
df  = OneWeek_TimeTable("9866615")
if (!require("ggplot2")) { install.packages("ggplot2"); require("ggplot2") }
#if (!require("RCurl")) { install.packages("RCurl"); require("RCurl") }
if (!require("qdap")) { install.packages("qdap"); require("qdap") }
if (!require("rvest")) { install.packages("rvest"); require("rvest") }
dataDir = "C:/Users/stepa/OneDrive/DataScience/Airports/ЯндексТаблоПарсер/Platov"
df = read.csv2( file.path(dataDir, "TimeTable.csv"))[,c(2:12)]
df$lat = as.numeric(as.character(df$lat))
df$lon = as.numeric(as.character(df$lon))
 # Frequncies plots ---- Freq_plot = function(dff, p_title) {      return(ggplot(data = dff) +         geom_bar(stat = "identity", aes(reorder(Var1, Freq), Freq), fill = "cyan4") +         geom_text(aes(reorder(Var1, Freq), label = Freq, y = Freq), size = 3, hjust = -0.1, colour = "dimgray", vjust = 0.25) +         theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + coord_flip() +         scale_y_continuous(breaks = seq(0, max(dff$Freq), 5)) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +          ggtitle( p_title )     ) } df_cities = as.data.frame(sort(table(df$`Направление`), decreasing = T)) df_airlines = as.data.frame(sort(table(df$`Авиакомпания`), decreasing = T)) df_jets = as.data.frame(sort(table(df$`Самолёт`), decreasing = T)) p1 = Freq_plot(df_cities, "Рейсов из аэропорта Платов\nпо направлениям (в неделю)") p2 = Freq_plot(df_airlines, "Количество рейсов из аэропорта Платов\nпо авиакомпаниям (в неделю)") p3 = Freq_plot(df_jets, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
p1 + annotate(geom = "text", x = df$Min, y = 50.0, xend = Inf, yend = Inf, label = 'PROOF ONLY', color = 'white', angle = 45, fontface = 'bold', size = 25, alpha = 0.5, family = 'Arial')
p1
p1 + annotate(geom = "text", x = 50, y = 50.0, xend = Inf, yend = Inf, label = 'PROOF ONLY', color = 'white', angle = 45, fontface = 'bold', size = 25, alpha = 0.5, family = 'Arial')
unique(df_cities)
length(unique(df_cities))
dim(unique(df_cities))
p1 + annotate(geom = "text", x = dim(unique(df_cities))[1], y = 50.0, xend = Inf, yend = Inf, label = 'PROOF ONLY', color = 'white', angle = 45, fontface = 'bold', size = 25, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = dim(unique(df_cities))[1], y = 10.0, xend = Inf, yend = Inf, label = 'PROOF ONLY', color = 'white', angle = 45, fontface = 'bold', size = 25, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = dim(unique(df_cities))[1], y = 100.0, xend = Inf, yend = Inf, label = 'PROOF ONLY', color = 'white', angle = 45, fontface = 'bold', size = 25, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = dim(unique(df_cities))[1], y = 100.0, xend = Inf, yend = Inf, label = 'PROOF ONLY', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = dim(unique(df_cities))[1], y = 100.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 10, y = 100.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 10, y = 10.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 30, y = 10.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 0, y = 0.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 5, y = 5.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 5, y = 15.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 15.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 5.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 15, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко', color = 'white', angle = 45, fontface = 'bold', size = 14, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\Для Гор.Транс.Ростов', color = 'white', angle = 45, fontface = 'bold', size = 14, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\nДля Гор.Транс.Ростов', color = 'white', angle = 45, fontface = 'bold', size = 14, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\nДля Гор.Транс.Ростов', color = 'white', angle = 45, fontface = 'bold', size = 12, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\nДля Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 12, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\nДля Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n   Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n    Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p2 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p2 + annotate(geom = "text", x = 15, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p2 + annotate(geom = "text", x = 10, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p2 + annotate(geom = "text", x = 9, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p3 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p3 + annotate(geom = "text", x = 15, y = 15, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p3 + annotate(geom = "text", x = 5, y = 15, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p3 + annotate(geom = "text", x = 7, y = 15, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p3 + annotate(geom = "text", x = 7, y = 15, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p3 + annotate(geom = "text", x = 7, y = 25, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p3 + annotate(geom = "text", x = 7, y = 35, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p3 + annotate(geom = "text", x = 5, y = 35, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
# Frequncy by Day plot ----  wdays = c( "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс") tab2 = apply(table(as.character(df$`расписание`$wday + 1), df$`Направление`), FUN = sum, MARGIN = 1) df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2) df_wd_fly$Var1 = as.integer(df_wd_fly$Var1) dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan3") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
wdays = c( "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс")
tab2 = apply(table(as.character(df$`расписание`$wday + 1), df$`Направление`), FUN = sum, MARGIN = 1)
df
df$`расписание`
df$`расписание`$wday
(df$`расписание`)$wday
df$`расписание`$wday
df_tmp = df$`расписание`
df_tmp = df$`расписание`
df_tmp$levels
df_tmp
as.POSIXct.Date( df$`расписание` )
df$`расписание` =  as.POSIXct.Date(df$`расписание`)
tab2 = apply(table(as.character( df$`расписание`$wday + 1), df$`Направление`), FUN = sum, MARGIN = 1)
df$`расписание`
df_tmp = df$`расписание`
df_tmp
df_tmp = df$`расписание`
df_tmp
df_tmp = as.data.frame( df$`расписание` )
df_tmp$wday
df$`расписание` =  as.POSIXct(df$`расписание`)
df_tmp = as.data.frame( df$`расписание` )
df_tmp$wday
tab2 = apply(table(as.character( df$`расписание`$wday + 1), df$`Направление`), FUN = sum, MARGIN = 1)
df$`расписание`
df_tmp[1]
df_tmp
df_tmp[1]
df_tmp[1,]
df_tmp[1,]$wday
df = read.csv2( file.path(dataDir, "TimeTable.csv"))[,c(2:12)]
df$lat = as.numeric(as.character(df$lat))
df$lon = as.numeric(as.character(df$lon))
df$`расписание` = as.POSIXct(df$`расписание`)
colnames(df)[11] = "Частота"
df$`расписание`$wday
weekdays(df$`расписание` )
tab2 = apply(table( weekdays( df$`расписание`$wday + 1), df$`Направление`), FUN = sum, MARGIN = 1)
tab2 = apply(table( weekdays( df$`расписание` ), df$`Направление`), FUN = sum, MARGIN = 1)
tab2
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2)
df_wd_fly
df_wd_fly$Var1 = as.integer(df_wd_fly$Var1)
df_wd_fly
tab2 = apply(table( weekdays( df$`расписание` ), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2)
df_wd_fly$Var2 = as.integer(df_wd_fly$Var1)
df_wd_fly
order( df_wd_fly$Var1 )
df_wd_fly$Var1
order( as.character( df_wd_fly$Var1 ) )
as.character(names(tab2))
tab2
df$`Направление`
df$`Направление` = as.character(df$`Направление`)
tab2 = apply(table( weekdays( df$`расписание` ), df$`Направление`), FUN = sum, MARGIN = 1)
tab2
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2)
df_wd_fly
as.integer(df_wd_fly$Var1)
tab2 = apply(table( weekdays( df$`расписание` ), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2)
dff = df_wd_fly
p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan3") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p4
wdays(df$`расписание`)
wday(df$`расписание`)
library(lubridate)
format( df$`расписание`, format = "w")
format( df$`расписание`, format = "%w")
tab2 = apply(table(format(df$`расписание`, format = "%w"), df$`Направление`), FUN = sum, MARGIN = 1)
tab2
wdays = c( "Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб")
tab2 = apply(table(format(df$`расписание`, format = "%w") + 1, df$`Направление`), FUN = sum, MARGIN = 1)
tab2
format(df$`расписание`, format = "%w") + 1
format(df$`расписание`, format = "%w")
tab2 = apply(table( as,integer(format(df$`расписание`, format = "%w")) + 1, df$`Направление`), FUN = sum, MARGIN = 1)
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")) + 1, df$`Направление`), FUN = sum, MARGIN = 1)
tab2
weekdays(df$`расписание` )
as.integer(format(df$`расписание`, format = "%w"))
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")) + 1, df$`Направление`), FUN = sum, MARGIN = 1)
tab2
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2)
df_wd_fly$Var2 = as.integer(df_wd_fly$Var1)
df_wd_fly
dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan3") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') p4
df_wd_fly
p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4")
p4
df_wd_fly
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1)
tab2
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2)
df_wd_fly
df_wd_fly[ df_wd_fly$Var1 == 0, 1]
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = as.integer( tab2 ))
df_wd_fly[ df_wd_fly$Var1 == 0, 1]
df_wd_fly
df_wd_fly[ df_wd_fly$Var1 == 0, 1] = 7
df_wd_fly[ df_wd_fly$Var1 == 0, 1]
df_wd_fly$Var1 = as.integer( df_wd_fly$Var1 )
df_wd_fly[ df_wd_fly$Var1 == 0, 1] = 7
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = as.integer( tab2 ))
df_wd_fly$Var1 = as.integer( df_wd_fly$Var1 )
df_wd_fly[ df_wd_fly$Var1 == 0, 1] = 7
df_wd_fly
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = as.integer( tab2 ))
df_wd_fly
df_wd_fly$Var1 = as.integer( df_wd_fly$Var1 )
df_wd_fly
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = as.integer( tab2 ))
df_wd_fly$Var1 = as.integer( df_wd_fly$Var1 )
df_wd_fly$Var1
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = as.integer( tab2 ))
df_wd_fly
df_wd_fly$Var1 = as.integer( df_wd_fly$Var1 )
df_wd_fly
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = as.integer( tab2 ))
df_wd_fly$Var1 = as.numeric( df_wd_fly$Var1 )
df_wd_fly
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2 )
df_wd_fly
df_wd_fly$Var1 = as.numeric( df_wd_fly$Var1 )
df_wd_fly
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1)
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2 )
df_wd_fly$Var1 = as.numeric( df_wd_fly$Var1 ) - 1
df_wd_fly
df_wd_fly[ df_wd_fly$Var1 == 0, 1] = 7
df_wd_fly
dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') p4
dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3)
dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4")
p4
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3)
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays)
 dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays)
wdays = c( "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс")
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays)
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm"))
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели")
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 15, y = 10.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
 dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 1, y = 10.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 3, y = 10.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial') p4
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 3, y = 10.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 4, y = 15, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") + p4 +    annotate(geom = "text", x = 4, y = 15, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p4 +    annotate(geom = "text", x = 4, y = 20, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p4 +    annotate(geom = "text", x = 4, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели")  p4 +    annotate(geom = "text", x = 4, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
format(df$`расписание`, format = "%h"))
format(df$`расписание`, format = "%h")
format(df$`расписание`, format = "%H")
tab2 = apply(table(as.integer(format(df$`расписание`, format = "%H")), df$`Направление`), FUN = sum, MARGIN = 1)
tab2
df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2)
df_wd_fly
dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() + #        scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели")
p4
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() + #        scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня") p5 + annotate(geom = "text", x = 4, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p5 + annotate(geom = "text", x = 17, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p5 + annotate(geom = "text", x = 12, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p5 + annotate(geom = "text", x = 10, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
df_wd_fly
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes( reorder(Var1, Var1), Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() + #        scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p5
df_wd_fly
df_wd_fly$Var1 = as.numeric(df_wd_fly$Var1)
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes( Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() + #        scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня")
p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes( Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 0:23, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes( Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 0:23, labels = 0:23) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
df_wd_fly
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
df_wd_fly$Var1
df_wd_fly
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1/7, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за дня")
p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq / 7), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq / 7), fill = "cyan4") +         geom_text(aes(Var1, Freq / 7, label = Freq, y = Freq / 7), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq / 7), fill = "cyan4") +         geom_text(aes(Var1, Freq / 7, label = Freq / 7, y = Freq / 7), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq / 7), fill = "cyan4") +         geom_text(aes(Var1, Freq / 7, label = round( Freq / 7 ), y = Freq / 7), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
if (!require("vcd")) { install.packages("vcd"); require("vcd") } tab = table(df$`Авиакомпания`, df$`Направление`) #mosaic(df$`Авиакомпания` ~ df$`Направление`) tab = tab[as.character(df_airlines$Var1), as.character(df_cities$Var1)] #df_cross = as.data.frame.matrix(tab[1:5, 1:5]) #mosaic(tab, legend = T, zero_size = 0, zero_split = T) #strucplot(tab[1:5, 1:5], legend = T, zero_size = 0, labeling = T) #mosaic(~`Направление` + `Авиакомпания`, data = df, zero_size = 0, zero_split = F, keep_aspect_ratio = F, ctx = 0.2) #mosaic(~`Авиакомпания` + `Направление`, data = df, zero_size = 0, legend = T) # par(mar = rep(.5, 4)) mosaicplot( tab, las = 2, col = "cyan4", main = "")
mosaicplot( t(tab), las = 2, col = "cyan4", main = "")
par(mar = rep(.5, 4));
mosaicplot(tab2, las = 2, col = "cyan4", main = "")
tab2 = table(df$`Авиакомпания`, df$`Самолёт`)
tab2
tab2 = tab2[as.character(df_airlines$Var1), as.character(df_jets$Var1)]
par(mar = rep(.5, 4));
mosaicplot(tab2, las = 2, col = "cyan4", main = "")
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "")
text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "CONFIDENTIAL", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = rgb(1, 0, 0, .2), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
watermark <- paste("Data embargo until", run.date)
mtext(watermark, side = 1, line = -1, adj = 1, col = rgb(1, 0, 0, .2), cex = 1.2)
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\n Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = rgb(1, 0, 0, .2), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\n Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = tomato, # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\n Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = "tomato", # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\n Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("tomato", alpha.f = 0.2), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\n Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("tomato", alpha.f = 0.5), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\n Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("tomato", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\nдля\nРостов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("tomato", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\nдля\n  Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("tomato", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\nдля\n     Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("tomato", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("tomato", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("blue", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("steelblue", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis
mosaicplot(tab2, las = 2, col = "cyan4", main = "")
text(   x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
 library(ggmap) main_airport = geocode("Novocherkask") if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") } map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1); par(cex = 2) #pdf( file = paste(plotDir, "/bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) colnames(df)[11] = "Freq" df2 = unique(df[, c(9:11)]) df2 = rbind(df2, c(main_airport$lon, main_airport$lat, sum(df2$Freq))) df2 = df2[df2$lon!=0,]  bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
library(ggmap)
main_airport = geocode("Novocherkask")
if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") }
map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1);
par(cex = 2)
#pdf( file = paste(plotDir, "/bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12)
#png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png"))
colnames(df)[11] = "Freq"
df2 = unique(df[, c(9:11)])
df2 = rbind(df2, c(main_airport$lon, main_airport$lat, sum(df2$Freq)))
df2 = df2[df2$lon!=0,] 
bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95)
text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
df_capacity = data.frame(     type = c("Airbus A319", "Boeing 737-800", "Сухой Суперджет 100", "Airbus A320", "Boeing 737-500", "Airbus А321", "Canadair regional jet", "Boeing 737-400", "Embraer EMB 175"),     capacity = c(134, 175, 95, 164, 132, 199, 76, 159, 80))
df_capacity$type = as.character(df_capacity$type)
df_jets$Var1 = as.character(df_jets$Var1)
df_jets
df_capacity
df_capacity = data.frame(     type = c("Airbus A319", "Boeing 737-800", "Airbus A320", "Сухой Суперджет 100", "Boeing 737-500", "Airbus А321", "Canadair regional jet", "Boeing 737-400", "Embraer EMB 175", "Canadair regional jet"),     capacity = c(134, 175, 164, 95, 132, 199, 76, 159, 80, 76))
df_capacity$type = as.character(df_capacity$type)
df_jets$Var1 = as.character(df_jets$Var1)
df_jets$`Вместимость` = df_capacity[, 2]
df_jets
df_jets$`Ёмкость` = df_jets$Freq * df_jets$`Вместимость`
df_jets$`Ёмкость`
sum(df_jets$`Ёмкость`) * 8 * 0.7
df_jets$Var1
df$`Самолёт` == df_jets$Var1
df$`Самолёт` == df_jets$Var1[1]
1:dim(df_jets)[1]
for (i in c(1:dim(df_jets)[1])) {      df[df$`Самолёт` == df_jets$Var1[i], 12] = df_jets$`Ёмкость`[i] }
df_jets
df_capacity
for (i in c(1:dim(df_jets)[1])) {      df[df$`Самолёт` == df_capacity$type[i], 12] = df_capacity$capacity[i] }
table( df$`Направление`, df$V12 ) 
tab3 = table( df$`Направление`, df$V12 ) 
tab3[1,]
names( tab3 )
colnames( tab3 )
as.integer( colnames( tab3 ) )
tab3[1,] *  as.integer(colnames(tab3))
for (i in c(1:dim(tab3)[1])) {     tab3[,10] = tab3[1,] * as.integer(colnames(tab3)) }
tab3
for (i in c(1:dim(tab3)[1])) {     tab3[i,10] = tab3[1,] * as.integer(colnames(tab3)) }
tab3 = cbind(tab3, NULL)
tab3 = table( df$`Направление`, df$V12 ) 
tab3 = as.data.frame( table( df$`Направление`, df$V12 ) )
tab3 = cbind(tab3, NULL)
tab3 
tab3[, 4] = tab3[, 2] * tab3[, 3]
tab3
tab3[, 2] * tab3[, 3]
tab3 = as.data.frame( table( df$`Направление`, df$V12 ) )
tab3 = as.data.frame( table( df$`Направление`, df$V12 ) )
tab3$Var1 = as.integer(tab3$Var1)
tab3$Var2 = as.integer(tab3$Var2)
tab3[, 4] = tab3[, 2] * tab3[, 3]
tab3
tab3 = as.data.frame( table( df$`Направление`, df$V12 ) )
tab3
tab3[, 4] = tab3Var2 * tab3$Freq
tab3 = as.data.frame( table( df$`Направление`, df$V12 ) )
tab3$Var1 = as.integer(tab3$Var1)
tab3$Var2 = as.integer(tab3$Var2)
tab3[, 4] = tab3$Var2 * tab3$Freq
tab3
tab3 = as.data.frame( table( df$`Направление`, df$V12 ) )
tab3$Var1 = as.integer(tab3$Var1)
tab3$Var2 = as.integer(tab3$Var2)
tab3 = cbind(tab3, tab3$Var2 * tab3$Freq)
tab3
tab3 = as.data.frame( table( df$`Направление`, df$V12 ) )
tab3$Var2 = as.integer(tab3$Var2)
tab3$Freq = as.integer(tab3$Freq)
tab3 = cbind(tab3, tab3$Var2 * tab3$Freq)
tab3
tab3 = table(df$`Направление`, df$V12) 
tab3[1,] * as.integer(colnames(tab3))
for (i in c(1:dim(tab3)[1])) {     tab3[i,] = tab3[i,] * as.integer(colnames(tab3)) }
tab3
apply( tab3, MARGIN = 2, sum)
apply( tab3, MARGIN = 1, sum)
df_city_capacity = as.data.frame( apply( tab3, MARGIN = 1, sum) )
df_city_capacity
order( apply( tab3, MARGIN = 1, sum) )
sort(apply(tab3, MARGIN = 1, sum))
sort(apply(tab3, MARGIN = 1, sum), decreasing = T)
df_city_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T))
df_city_capacity
colnames( df_city_capacity ) = c("Var1", "Freq")
df_city_capacity
colnames( df_city_capacity )
df_city_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T))
colnames( df_city_capacity ) 
df_city_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T))
df_city_capacity = cbind( rownames(df_city_capacity), df_city_capacity)
colnames( df_city_capacity ) = c("Var1", "Freq")
df_city_capacity
p6 = Freq_plot(df_city_capacity, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
p6 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
Freq_plot(df_city_capacity, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
df_city_capacity
class( df_city_capacity[,1] )
class( df_city_capacity[,2] )
df_city_capacity[,1] = as.character( df_city_capacity[,1])
Freq_plot(df_city_capacity, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
df_cities = as.data.frame(sort(table(df$`Направление`), decreasing = T))
Freq_plot(df_cities, "Рейсов из аэропорта Платов\nпо направлениям (в неделю)")
Freq_plot(df_airlines, "Количество рейсов из аэропорта Платов\nпо авиакомпаниям (в неделю)")
Freq_plot = function(dff, p_title) {      return(ggplot(data = dff) +         geom_bar(stat = "identity", aes(reorder(Var1, Freq), Freq), fill = "cyan4") +         geom_text(aes(reorder(Var1, Freq), label = Freq, y = Freq), size = 3, hjust = -0.1, colour = "dimgray", vjust = 0.25) +         theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + coord_flip() +         scale_y_continuous(breaks = seq(0, max(dff$Freq), max(dff$Freq)/50)) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +          ggtitle( p_title )     ) } df_cities = as.data.frame(sort(table(df$`Направление`), decreasing = T)) df_airlines = as.data.frame(sort(table(df$`Авиакомпания`), decreasing = T)) df_jets = as.data.frame(sort(table(df$`Самолёт`), decreasing = T))
Freq_plot(df_cities, "Рейсов из аэропорта Платов\nпо направлениям (в неделю)")
Freq_plot = function(dff, p_title) {      return(ggplot(data = dff) +         geom_bar(stat = "identity", aes(reorder(Var1, Freq), Freq), fill = "cyan4") +         geom_text(aes(reorder(Var1, Freq), label = Freq, y = Freq), size = 3, hjust = -0.1, colour = "dimgray", vjust = 0.25) +         theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + coord_flip() +         scale_y_continuous(breaks = seq(0, max(dff$Freq), max(dff$Freq)/25)) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +          ggtitle( p_title )     ) }
Freq_plot(df_cities, "Рейсов из аэропорта Платов\nпо направлениям (в неделю)")
Freq_plot = function(dff, p_title) {      return(ggplot(data = dff) +         geom_bar(stat = "identity", aes(reorder(Var1, Freq), Freq), fill = "cyan4") +         geom_text(aes(reorder(Var1, Freq), label = Freq, y = Freq), size = 3, hjust = -0.1, colour = "dimgray", vjust = 0.25) +         theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + coord_flip() +         scale_y_continuous(breaks = round(seq(0, max(dff$Freq), max(dff$Freq)/25))) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +          ggtitle( p_title )     ) }
Freq_plot(df_cities, "Рейсов из аэропорта Платов\nпо направлениям (в неделю)")
Freq_plot(df_airlines, "Количество рейсов из аэропорта Платов\nпо авиакомпаниям (в неделю)")
Freq_plot(df_jets, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") 
wdays = c( "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс") #weekdays(df$`расписание` ) tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1) df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2 ) df_wd_fly$Var1 = as.numeric( df_wd_fly$Var1 ) - 1 df_wd_fly[ df_wd_fly$Var1 == 0, 1] = 7 dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели")  p4 +    annotate(geom = "text", x = 4, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
tab2 = apply(table(as.integer(format(df$`расписание`, format = "%H")), df$`Направление`), FUN = sum, MARGIN = 1) df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2) df_wd_fly$Var1 = as.numeric(df_wd_fly$Var1) #df_wd_fly[df_wd_fly$Var1 == 0, 1] = 7 dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1 ) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за дня") p5 + annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
Freq_plot(df_city_capacity, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
p6 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 = Freq_plot(df_city_capacity, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
p6 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 25, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 5, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 10, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 10, y = 100, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 10, y = 150, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 = Freq_plot(df_city_capacity, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
p6 + annotate(geom = "text", x = 10, y = 150, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 = Freq_plot(df_city_capacity, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
p6 + annotate(geom = "text", x = 10, y = 1500, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 10, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 10, y = 7000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 5, y = 7000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 15, y = 7000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 15, y = 8000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
df_jets$`Ёмкость`
df_capacity = data.frame(     type = c("Airbus A319", "Boeing 737-800", "Airbus A320", "Сухой Суперджет 100", "Boeing 737-500", "Airbus А321", "Canadair regional jet", "Boeing 737-400", "Embraer EMB 175", "Canadair regional jet"),     capacity = c(134, 175, 164, 95, 132, 199, 76, 159, 80, 76)) df_capacity$type = as.character(df_capacity$type) df_jets$Var1 = as.character(df_jets$Var1) #within(df_jets, `Вместимость` <- factor(`Вместимость`, labels = df_capacity$capacity)) #factor(df_jets$Var1) #factor(df_capacity$capacity) df_jets$`Вместимость` = df_capacity[, 2] #which(df_capacity$type==df_jets$Var1) #df_capacity[, 2] #df_jets$Var1[ df_capacity$, ] df_jets$`Ёмкость` = df_jets$Freq * df_jets$`Вместимость`
df_jets$`Ёмкость`
df_jets
df_jets[, c(1,4)]
df_tmp = df_jets[, c(1, 4)]
colnames(df_tmp) = c("Var1", "Freq")
p6 = Freq_plot( df_tmp, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
p6 + annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 5, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p6 + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
sum(df_jets$`Ёмкость`)
sum(df_jets$`Ёмкость`)
df_jets
sum(df_jets$`Ёмкость`) * 4
df_city_capacity
sum( df_city_capacity$Freq )
sum(df_jets$`Ёмкость`)
df_capacity = data.frame(     type = c("Airbus A319", "Boeing 737-800", "Airbus A320", "Сухой Суперджет 100", "Boeing 737-500", "Airbus А321", "Canadair regional jet", "Boeing 737-400", "Embraer EMB 175", "Canadair regional jet"),     capacity = c(134, 175, 164, 95, 132, 199, 76, 159, 80, 76)) df_capacity$type = as.character(df_capacity$type) df_jets$Var1     = as.character(df_jets$Var1)
df_jets$`Вместимость` = df_capacity[, 2]
df_jets$`Ёмкость`     = df_jets$Freq * df_jets$`Вместимость`
df_tmp = df_jets[, c(1, 4)]
colnames(df_tmp) = c("Var1", "Freq")
p6 = Freq_plot( df_tmp, "Ёмкость рейсов из аэропорта Платов\nпо типам самолётов (в неделю)")
p6 + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
sum(df_jets$`Ёмкость`) * 4
sum(df_jets$`Ёмкость`) * 4
sum(df_jets$`Ёмкость`) * 4 * 0.7
df_capacity
df_jets
df$`Самолёт`
table( df$`Самолёт` )
df_capacity
df_jets
table( df$`Самолёт` )
sum(df_jets$`Ёмкость`) * 4 * 0.7
sum(df_jets$`Ёмкость`) * 8 * 0.7
p6 + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + xlab(sum(df_jets$`Ёмкость`) * 8)
p6 + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab(sum(df_jets$`Ёмкость`) * 8)
p6 + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab( paste("Общая ёмкость по типам", sum(df_jets$`Ёмкость`) * 8) )
p6 + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab( paste("Общая ёмкость по типам:", sum(df_jets$`Ёмкость`) * 8) )
p6 + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab( paste("Общая ёмкость по типам:", sum(df_jets$`Ёмкость`) * 4) )
p6 + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab( paste("Общая ёмкость по типам (в одном направлении):", sum(df_jets$`Ёмкость`) * 4) )
p6 = Freq_plot( df_tmp, "Ёмкость рейсов из аэропорта Платов\nпо типам самолётов (в неделю)") + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab( paste("Общая ёмкость по типам (в одном направлении):", sum(df_jets$`Ёмкость`) * 4) )
p6
p7 = Freq_plot(df_city_capacity, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p7
dataDir = "C:/Users/stepa/OneDrive/DataScience/Airports/ЯндексТаблоПарсер/Platov/Plots"
pdf(file = paste(plotDir, "/Freq_cities.pdf", sep = ""), width = 12, height = 12, pointsize = 10)
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
dev.off()
plotDir
dataDir = "C:/Users/stepa/OneDrive/DataScience/Airports/ЯндексТаблоПарсер/Platov"
plotDir = "C:/Users/stepa/OneDrive/DataScience/Airports/ЯндексТаблоПарсер/Platov/Plots"
pdf(file = paste(plotDir, "/Freq_cities.pdf", sep = ""), width = 12, height = 12, pointsize = 10)
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
dev.off()
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5)
pdf(file = paste(plotDir, "/Freq_cities.pdf", sep = ""), width = 12, height = 12, pointsize = 10)
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5)
dev.off()
warnings()
png(filename = file.path(plotDir, "Freq_cities.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png"))
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5)
dev.off()
png(filename = file.path(plotDir, "Freq_cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png"))
p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5)
dev.off()
png(filename = file.path(plotDir, "Freq_airlines.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p2 + annotate(geom = "text", x = 9, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') dev.off()
png(filename = file.path(plotDir, "Freq_airlines.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p2 + annotate(geom = "text", x = 9, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') dev.off() png(filename = file.path(plotDir, "Freq_jets.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p3 + annotate(geom = "text", x = 5, y = 35, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial') dev.off()
p4
png(filename = file.path(plotDir, "Freq_per_day.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png"))
p4
dev.off()
png(filename = file.path(plotDir, "Freq_per_hour.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png"))
p5
dev.off()
png(filename = file.path(plotDir, "Freq_per_day.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png"))
p4
dev.off()
dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за неделю") +         annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Freq_per_hour.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p5 dev.off()
png(filename = file.path(plotDir, "Mosaic_Airline_vs_City.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(tab, las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "Mosaic_City_vs_Airline.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(t(tab), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
tab2 = table(df$`Авиакомпания`, df$`Самолёт`) tab2 = tab2[as.character(df_airlines$Var1), as.character(df_jets$Var1)] png(filename = file.path(plotDir, "Mosaic_Airline_vs_Jet.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(tab2, las = 2, col = "cyan4", main = "") text(   x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
if (!require("vcd")) { install.packages("vcd"); require("vcd") } tab = table(df$`Авиакомпания`, df$`Направление`) #mosaic(df$`Авиакомпания` ~ df$`Направление`) tab = tab[as.character(df_airlines$Var1), as.character(df_cities$Var1)] #df_cross = as.data.frame.matrix(tab[1:5, 1:5]) #mosaic(tab, legend = T, zero_size = 0, zero_split = T) #strucplot(tab[1:5, 1:5], legend = T, zero_size = 0, labeling = T) #mosaic(~`Направление` + `Авиакомпания`, data = df, zero_size = 0, zero_split = F, keep_aspect_ratio = F, ctx = 0.2) #mosaic(~`Авиакомпания` + `Направление`, data = df, zero_size = 0, legend = T) # png(filename = file.path(plotDir, "Mosaic_Airline_vs_City.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(tab, las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() png(filename = file.path(plotDir, "Mosaic_City_vs_Airline.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(t(tab), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() # АК vs Самолёт tab2 = table(df$`Авиакомпания`, df$`Самолёт`) tab2 = tab2[as.character(df_airlines$Var1), as.character(df_jets$Var1)] png(filename = file.path(plotDir, "Mosaic_Airline_vs_Jet.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(tab2, las = 2, col = "cyan4", main = "") text(   x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "Mosaic_Jet_vs_Airline.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("steelblue", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis dev.off()
 library(ggmap) main_airport = geocode("Novocherkask") if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") } map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1); par(cex = 2) #pdf( file = paste(plotDir, "/bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) colnames(df)[11] = "Freq" df2 = unique(df[, c(9:11)]) df2 = rbind(df2, c(main_airport$lon, main_airport$lat, sum(df2$Freq))) df2 = df2[df2$lon!=0,]  png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
library(ggmap)
main_airport = geocode("Novocherkask")
if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") }
map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1);
library(ggmap)
main_airport = geocode("Novocherkask")
geocode("Novocherkask")
main_airport = geocode("Novocherkask")
geocode("Novocherkask")
main_airport = geocode("Novocherkask")
if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") }
map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1);
par(cex = 2)
map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1);
GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1)
map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1);
par(cex = 2)
df2 = unique(df[, c(9:11)])
df2 = rbind(df2, c(main_airport$lon, main_airport$lat, sum(df2$Freq)))
df2 = df2[df2$lon!=0,] 
par(mar = rep(.5, 4)) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
par(cex = 5)
df2 = unique(df[, c(9:11)]) df2 = rbind(df2, c(main_airport$lon, main_airport$lat, sum(df2$Freq))) df2 = df2[df2$lon!=0,]  png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 15) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 25) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
 png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 15) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 5) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
 png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 3) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
      df2, coords = c("lon", "lat"), map, zcol = "Freq",
      key.entries = c(2, 5, 8 , 25, 150, 250),
      colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),
      do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "bottomright")
bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "bottomright")
png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 3) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "bottomright") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "")
 png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 3) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 1, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 3) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 3) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
# Capacity ---- df_capacity = data.frame(     type = c("Airbus A319", "Boeing 737-800", "Airbus A320", "Сухой Суперджет 100", "Boeing 737-500", "Airbus А321", "Canadair regional jet", "Boeing 737-400", "Embraer EMB 175", "Canadair regional jet"),     capacity = c(134, 175, 164, 95, 132, 199, 76, 159, 80, 76)) df_capacity$type = as.character(df_capacity$type) df_jets$Var1     = as.character(df_jets$Var1) table( df$`Самолёт` ) df_jets$`Вместимость` = df_capacity[, 2] df_jets$`Ёмкость`     = df_jets$Freq * df_jets$`Вместимость` df_tmp = df_jets[, c(1, 4)] colnames(df_tmp) = c("Var1", "Freq") p6 = Freq_plot(df_tmp, "Ёмкость рейсов из аэропорта Платов\nпо типам самолётов (в неделю)") + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab(paste("Общая ёмкость по типам (в одном направлении):", sum(df_jets$`Ёмкость`) * 4)) png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p6 dev.off()
png(filename = file.path(plotDir, "Capacity_vs_jet.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p6 dev.off()
p7
 # Bubble plot ---- library(ggmap) main_airport = geocode("Novocherkask") if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") } map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1); df2 = unique(df[, c(9:11)]) df2 = rbind(df2, c(main_airport$lon, main_airport$lat, sum(df2$Freq))) df2 = df2[df2$lon!=0,]  png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 3) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() # Capacity ---- df_capacity = data.frame(     type = c("Airbus A319", "Boeing 737-800", "Airbus A320", "Сухой Суперджет 100", "Boeing 737-500", "Airbus А321", "Canadair regional jet", "Boeing 737-400", "Embraer EMB 175", "Canadair regional jet"),     capacity = c(134, 175, 164, 95, 132, 199, 76, 159, 80, 76)) df_capacity$type = as.character(df_capacity$type) df_jets$Var1     = as.character(df_jets$Var1) df_jets$`Вместимость` = df_capacity[, 2] df_jets$`Ёмкость`     = df_jets$Freq * df_jets$`Вместимость` df_tmp = df_jets[, c(1, 4)] colnames(df_tmp) = c("Var1", "Freq") p6 = Freq_plot(df_tmp, "Ёмкость рейсов из аэропорта Платов\nпо типам самолётов (в неделю)") + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab(paste("Общая ёмкость по типам (в одном направлении):", sum(df_jets$`Ёмкость`) * 4)) png(filename = file.path(plotDir, "Capacity_vs_jet.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p6 dev.off() # Пассажиропоток sum(df_jets$`Ёмкость`) * 8 * 0.7 # Ёмкость по направленимям for (i in c(1:dim(df_jets)[1])) {     df[df$`Самолёт` == df_capacity$type[i], 12] = df_capacity$capacity[i] } tab3 = table(df$`Направление`, df$V12)  for (i in c(1:dim(tab3)[1])) {     tab3[i,] = tab3[i,] * as.integer(colnames(tab3)) } df_city_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T)) df_city_capacity = cbind(rownames(df_city_capacity), df_city_capacity) df_city_capacity[,1] = as.character( df_city_capacity[,1]) colnames( df_city_capacity ) = c("Var1", "Freq") sum( df_city_capacity$Freq ) p7 = Freq_plot(df_city_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Capacity_vs_city.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p7
library(ggmap)
main_airport = geocode("Novocherkask")
main_airport = geocode("Novocherkask")
main_airport = geocode("Novocherkask", override_limit = T)
if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") }
map <- GetMap(center = c( main_airport$lat, main_airport$lon), zoom = 3,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1);
df2 = unique(df[, c(9:11)])
df2 = rbind(df2, c(main_airport$lon, main_airport$lat, sum(df2$Freq)))
df2 = df2[df2$lon!=0,] 
png(filename = file.path(plotDir, "Bubble_plot_Cities.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) par(cex = 3) bubbleMap(       df2, coords = c("lon", "lat"), map, zcol = "Freq",       key.entries = c(2, 5, 8 , 25, 150, 250),       colPalette = colorRampPalette(c("cyan4", "tomato"))( 6 ),       do.sqrt = T, alpha = 1.0, verbose = 0.95, legendLoc = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
p7 = Freq_plot(df_city_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
png(filename = file.path(plotDir, "Capacity_vs_city.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png"))
p7
dev.off()
# Capacity ---- df_capacity = data.frame(     type = c("Airbus A319", "Boeing 737-800", "Airbus A320", "Сухой Суперджет 100", "Boeing 737-500", "Airbus А321", "Canadair regional jet", "Boeing 737-400", "Embraer EMB 175", "Canadair regional jet"),     capacity = c(134, 175, 164, 95, 132, 199, 76, 159, 80, 76)) df_capacity$type = as.character(df_capacity$type) df_jets$Var1     = as.character(df_jets$Var1) df_jets$`Вместимость` = df_capacity[, 2] df_jets$`Ёмкость`     = df_jets$Freq * df_jets$`Вместимость` df_tmp = df_jets[, c(1, 4)] colnames(df_tmp) = c("Var1", "Freq") p6 = Freq_plot(df_tmp, "Ёмкость рейсов из аэропорта Платов\nпо типам самолётов (в неделю)") + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab(paste("Общая ёмкость по типам (в одном направлении):", sum(df_jets$`Ёмкость`) * 4)) png(filename = file.path(plotDir, "Jet_vs_Capacity.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p6 dev.off() # Пассажиропоток sum(df_jets$`Ёмкость`) * 8 * 0.7 # Ёмкость по направленимям for (i in c(1:dim(df_jets)[1])) {     df[df$`Самолёт` == df_capacity$type[i], 12] = df_capacity$capacity[i] } tab3 = table(df$`Направление`, df$V12)  for (i in c(1:dim(tab3)[1])) {     tab3[i,] = tab3[i,] * as.integer(colnames(tab3)) } df_city_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T)) df_city_capacity = cbind(rownames(df_city_capacity), df_city_capacity) df_city_capacity[,1] = as.character( df_city_capacity[,1]) colnames( df_city_capacity ) = c("Var1", "Freq") sum( df_city_capacity$Freq ) p7 = Freq_plot(df_city_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "City_vs_Capacity.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p7 dev.off()
png(filename = file.path(plotDir, "City_vs_Freq.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5) dev.off() png(filename = file.path(plotDir, "Airlines_vs_Freq.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p2 + annotate(geom = "text", x = 9, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') dev.off() png(filename = file.path(plotDir, "Jet_vs_Freq.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p3 + annotate(geom = "text", x = 5, y = 35, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial') dev.off()
tab3
for (i in c(1:dim(tab3)[1])) {     tab3[i,] = tab3[i,] * as.integer(colnames(tab3)) }
tab3
tab3 = table(df$`Авиакомпания`, df$V12)
tab3
as.integer(colnames(tab3))
for (i in c(1:dim(tab3)[1])) {     tab3[i,] = tab3[i,] * as.integer(colnames(tab3)) }
tab3
df_airline_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T))
df_airline_capacity = cbind(rownames(df_city_capacity), df_city_capacity)
df_airline_capacity[, 1] = as.character(df_city_capacity[, 1])
colnames(df_city_capacity) = c("Var1", "Freq")
sum(df_city_capacity$Freq)
p8 = Freq_plot(df_city_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p8
colnames(df_airline_capacity) = c("Var1", "Freq")
sum(df_airline_capacity$Freq)
df_airline_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T))
df_airline_capacity = cbind(rownames(df_airline_capacity), df_airline_capacity)
df_airline_capacity[, 1] = as.character(df_airline_capacity[, 1])
colnames(df_airline_capacity) = c("Var1", "Freq")
sum(df_airline_capacity$Freq)
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p8
df_airline_capacity
tab3 = table(df$`Авиакомпания`, df$V12)
tab3
for (i in c(1:dim(tab3)[1])) {     tab3[i,] = tab3[i,] * as.integer(colnames(tab3)) }
tab3
as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T))
df_airline_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T))
df_airline_capacity = cbind(rownames(df_airline_capacity), df_airline_capacity)
df_airline_capacity
df_airline_capacity[, 1] = as.character(df_airline_capacity[, 1])
df_airline_capacity
colnames(df_airline_capacity) = c("Var1", "Freq")
df_airline_capacity
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p8
p8
Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)")
dev.off()
Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)")
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
png(filename = file.path(plotDir, "Airline_vs_Capacity.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png"))
p8
dev.off()
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо авиакомпаниям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Airline_vs_Capacity.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p8 dev.off()
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо авиакомпаниям (в неделю)") +     annotate(geom = "text", x = 15, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
dev.off()
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо авиакомпаниям (в неделю)") +     annotate(geom = "text", x = 15, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial')
p8
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо авиакомпаниям (в неделю)") +     annotate(geom = "text", x = 15, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Airline_vs_Capacity.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p8 dev.off()
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо авиакомпаниям (в неделю)") +     annotate(geom = "text", x = 30, y = 3000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Airline_vs_Capacity.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p8 dev.off()
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо авиакомпаниям (в неделю)") +     annotate(geom = "text", x = 7, y = 3000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Airline_vs_Capacity.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p8 dev.off()
p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо авиакомпаниям (в неделю)") +     annotate(geom = "text", x = 9, y = 3000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Airline_vs_Capacity.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p8 dev.off()
wdays = c( "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс")
tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1) df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2 ) df_wd_fly$Var1 = as.numeric( df_wd_fly$Var1 ) - 1 df_wd_fly[ df_wd_fly$Var1 == 0, 1] = 7 dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 4, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial')
p4
png(filename = file.path(plotDir, "Freq_per_day.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p4 dev.off()
dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 4, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 9, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Freq_per_day.png"), width = 640, height = 640, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p4 dev.off()
tab = table(df$`Авиакомпания`, df$`Направление`)
tab = tab[as.character(df_airlines$Var1), as.character(df_cities$Var1)]
tab
if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") }
if (!require("openxlsx")) { install.packages("openxlsx"); require("openxlsx") }
if (!require("loa")) { install.packages("loa"); require("loa") }
if (!require("ggplot2")) { install.packages("ggplot2"); require("ggplot2") }
library(stringr)
library(gridExtra)
dataDir = "C:/Users/stepa/OneDrive/DataScience/RgoogleMap/RGM"
plotDir = "C:/Users/stepa/OneDrive/DataScience/RgoogleMap/RGM/Images"
df = read.xlsx(file.path(dataDir, "Bus stops.xlsx"), sheet = 1, startRow = 1)
colnames(df)[c(1:7)] = c("name", "bus", "tram", "trolley", "minibus", "lat", "lon")
df$lat = as.numeric(df$lat)
df$lon = as.numeric(df$lon)
# Number of routes df = cbind( df, str_count(df$bus, ",")     + 1 ) df = cbind( df, str_count(df$tram, ",")    + 1 ) df = cbind( df, str_count(df$trolley, ",") + 1 ) df = cbind( df, str_count(df$minibus, ",") + 1 ) colnames(df)[c(10:13)] = c("n_bus", "n_tram", "n_trolley", "n_minibus") df$n_bus[is.na(df$n_bus)] = 0 df$n_tram[is.na(df$n_tram)] = 0 df$n_trolley[is.na(df$n_trolley)] = 0 df$n_minibus[is.na(df$n_minibus)] = 0 df = cbind( df, df$n_bus + df$n_tram + df$n_trolley + df$n_minibus ) colnames(df)[14] = "n_all" # Vehicle numbers list ---- library(gtools) bus_numbers = unique( unlist( strsplit( df$bus, ", ") ) )  bus_numbers = mixedsort( bus_numbers )[-c(length(bus_numbers))] tram_numbers = unique(unlist(strsplit(df$tram, ", "))) tram_numbers = mixedsort(tram_numbers)[-c(length(tram_numbers))] trolley_numbers = unique(unlist(strsplit(df$trolley, ", "))) trolley_numbers = mixedsort(trolley_numbers)[-c(length(trolley_numbers))] minibus_numbers = unique(unlist(strsplit(df$minibus, ", "))) minibus_numbers = mixedsort(minibus_numbers)[-c(length(minibus_numbers))] bus_numbers_circled = c("5","10","11","18л","18п","22","27","28","35","35а","37","39","40","42","42а", "45","47","49","51","54","58","60","61","68","69","69а", "78","83","89","90","90а", "94","96","99") minibus_numbers_circled = c("12", "20", "23", "24", "25", "38", "40", "49", "93", "94", "96") trolley_numbers_circled = c("2", "12") tram_numbers_circled = NULL strsplit("a.b.c", "."))
strsplit("a.b.c", ".")
# Routes and stpos distances data.frame ---- #if (!require("geosphere")) { install.packages("geosphere"); require("geosphere") } #if (!require("rgeos")) { install.packages("rgeos"); require("rgeos") } Route = function(df4, stop_n) {     i = dim(df4)[1]     df4 = cbind(df4, 1:dim(df4)[1])     tmp = 1     k = stop_n     df_tmp = df4[k,]     while (i >= 0) {         if (length(k) != dim(df4)[1]) {             set1sp <- SpatialPoints(df4[c(k), c('lon', 'lat')])             set2sp <- SpatialPoints(df4[-c(k), c('lon', 'lat')])             df_tmp2 = df4[-c(k),]             kk = which(gDistance(set1sp, set2sp, byid = TRUE) == min(gDistance(set1sp, set2sp, byid = TRUE)), arr.ind = TRUE)[1, 1]             df_tmp = rbind(df_tmp, df_tmp2[c(kk),])             k = c(k, df_tmp2[kk, 15])         }         i = i - 1     }     return(df_tmp) } Route_length = function(df) {     r_len = NULL     for (k in c(1:(dim(df)[1] - 1))) {         #        set1sp <- SpatialPoints(df[k, c('lon', 'lat')])         #       set2sp <- SpatialPoints(df[k+1, c('lon', 'lat')])         r_len = c(r_len, distm(df[c(k), c('lon', 'lat')], df[c(k + 1), c('lon', 'lat')]))     }     return(r_len) } Route_shortest = function(df4) {     min_r = sum(Route_length(Route(df4, 1)))     min_k = 1     for (i in c(2:dim(df4)[1])) {         r_l_ = sum(Route_length(Route(df4, i)))         if (r_l_ < min_r) {             min_r = r_l_             min_k = i         }     }     return(min_k) } df_routes = function(df_stops, numbers) {     r_l = data.frame(Route_n = NULL, dist = NULL, V1 = NULL, V2 = NULL, V3 = NULL, V4 = NULL, V5 = NULL, V6 = NULL, V7 = NULL, V8 = NULL, V9 = NULL, V10 = NULL, V11 = NULL, V12 = NULL, V13 = NULL, V14 = NULL, V15 = NULL)     for (route_n in numbers) {         cat(paste(".", route_n, ".", sep = ""))         df4 = df[Stops_list_for_route(df_stops, route_n),]         df_tmp = Route(df4, Route_shortest(df4))         r_l = rbind(r_l, cbind(rep(route_n, dim(df_tmp)[1]), c(Route_length(df_tmp), NA), df_tmp))     }     colnames(r_l) = c("route_n", "next_stop_dist", colnames(df))     df_tmp = r_l     del_list = NULL     for (k in c(2:dim(df_tmp)[1])) {         if ((df_tmp$route_n[k - 1] == df_tmp$route_n[k]) &&             (df_tmp$name[k - 1] == df_tmp$name[k]) &&             (df_tmp$next_stop_dist[k - 1] <= 150)) {             # del string             del_list = c(del_list, k - 1)         }     }     #df_tmp[-del_list, 3]     return(df_tmp[-del_list,]) } #df_bus_routes = df_routes(df$bus, bus_numbers) #write.csv2(x = df_bus_routes, file = file.path(dataDir, "Bus routes.csv")) df_bus_routes = read.csv2(file = file.path(dataDir, "Bus routes.csv"))[, - c(1)] #df_minibus_routes = df_routes(df$minibus, minibus_numbers) #write.csv2(x = df_minibus_routes, file = file.path(dataDir, "Minibus routes.csv")) df_minibus_routes = read.csv2(file = file.path(dataDir, "Minibus routes.csv"))[, - c(1)] #df_tram_routes = df_routes(df$tram, tram_numbers) #write.csv2(x = df_trolley_routes, file = file.path(dataDir, "Trolley routes.csv")) df_trolley_routes = read.csv2(file = file.path(dataDir, "Trolley routes.csv"))[, - c(1)] #df_trolley_routes = df_routes(df$trolley, trolley_numbers) #write.csv2(x = df_tram_routes, file = file.path(dataDir, "Tram routes.csv")) df_tram_routes = read.csv2(file = file.path(dataDir, "Tram routes.csv"))[, - c(1)]
df2 = Stops_list_for_route2(df_minibus_routes, "40") #df2 = df2[ df2$name %in% c("Универсам", "ул. Интернациональная"), ] AllBusStops = plotmap(                  lat = df2$lat, lon = df2$lon, API = "google2", zoom = 13,                  col = c( "tomato",rep("steelblue", dim(df2)[1]-2), "tomato"), pch = 20, cex = 1.6)
fcn = function(xx) {     if (!is.na(xx)) {         unlist(strsplit(x = xx, split = ", "))     } else return(NA)     } fcn2 = function(xxx, elem) {     return(elem %in% xxx) } Stops_list_for_route = function(df, route) {     list1 = lapply(df, FUN = fcn)     list2 = unlist(lapply(list1, FUN = fcn2, elem = route))     return(list2) } Stops_list_for_route2 = function(df_r, route_n) {     return( df_r[df_r$route_n == route_n,] ) }
df2 = Stops_list_for_route2(df_minibus_routes, "40")
#df2 = df2[ df2$name %in% c("Универсам", "ул. Интернациональная"), ]
AllBusStops = plotmap(                  lat = df2$lat, lon = df2$lon, API = "google2", zoom = 13,                  col = c( "tomato",rep("steelblue", dim(df2)[1]-2), "tomato"), pch = 20, cex = 1.6)
# One bus stop
BusStop = plotmap(lat = 47.20661, lon = 39.7169, map, col = "purple", pch = "20", cex = 1.5)
str_count(string = df$bus, pattern = paste( " ", bus_numbers[1], sep = "") )
AllBusStops = plotmap(                  lat = df2$lat, lon = df2$lon, API = "google2", zoom = 13,                  col = c( "tomato",rep("steelblue", dim(df2)[1]-2), "tomato"), pch = 20, cex = 1.6)
AllBusStops = plotmap(lat = df$lat, lon = df$lon, API = "google2", zoom = 15,                  col = "tomato", pch = 20, cex = 0.3 * df$n_bus)
AllBusStops = plotmap(lat = df$lat, lon = df$lon, API = "google2", zoom = 15,                  col = "grey", pch = 20, cex = 0.3 * df$n_minibus)
AllBusStops = plotmap(lat = df$lat, lon = df$lon, API = "google2", zoom = 15,                  col = "steelblue", pch = 20, cex = 0.6 * df$n_trolley)
df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5)
df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5)
df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() png(filename = file.path(plotDir, "Minibus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_minibus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_minibus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() png(filename = file.path(plotDir, "TrolleyBus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_trolley > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_trolley', key.entries = c(1 + 1:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(4), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() png(filename = file.path(plotDir, "All routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_all > 0,] bubbleMap(df3, coords = c("lon", "lat"), map,       zcol = 'n_all', key.entries = 1 + 2 ^ (0:5), colPalette = colorRampPalette(c("steelblue", "tomato"))(6), do.sqrt = T, alpha = 0.5, verbose = 0.25) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12)
df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12)
df3 = df[df$n_bus > 0,]
bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5)
text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
dev.off()
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12)
df3 = df[df$n_bus > 0,]
bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5)
text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
dev.off()
df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 4, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
png(filename = file.path(plotDir, "TrolleyBus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_trolley > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_trolley', key.entries = c(1 + 1:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(4), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 4, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() png(filename = file.path(plotDir, "All routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_all > 0,] bubbleMap(df3, coords = c("lon", "lat"), map,       zcol = 'n_all', key.entries = 1 + 2 ^ (0:5), colPalette = colorRampPalette(c("steelblue", "tomato"))(6), do.sqrt = T, alpha = 0.5, verbose = 0.25) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 2, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12)
df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 4, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") } if (!require("openxlsx")) { install.packages("openxlsx"); require("openxlsx") } if (!require("loa")) { install.packages("loa"); require("loa") } if (!require("ggplot2")) { install.packages("ggplot2"); require("ggplot2") } library(stringr) library(gridExtra) dataDir = "C:/Users/stepa/OneDrive/DataScience/RgoogleMap/RGM" plotDir = "C:/Users/stepa/OneDrive/DataScience/RgoogleMap/RGM/Images" df = read.xlsx(file.path(dataDir, "Bus stops.xlsx"), sheet = 1, startRow = 1) colnames(df)[c(1:7)] = c("name", "bus", "tram", "trolley", "minibus", "lat", "lon") df$lat = as.numeric(df$lat) df$lon = as.numeric(df$lon) # Number of routes df = cbind( df, str_count(df$bus, ",")     + 1 ) df = cbind( df, str_count(df$tram, ",")    + 1 ) df = cbind( df, str_count(df$trolley, ",") + 1 ) df = cbind( df, str_count(df$minibus, ",") + 1 ) colnames(df)[c(10:13)] = c("n_bus", "n_tram", "n_trolley", "n_minibus") df$n_bus[is.na(df$n_bus)] = 0 df$n_tram[is.na(df$n_tram)] = 0 df$n_trolley[is.na(df$n_trolley)] = 0 df$n_minibus[is.na(df$n_minibus)] = 0 df = cbind( df, df$n_bus + df$n_tram + df$n_trolley + df$n_minibus ) colnames(df)[14] = "n_all" # Vehicle numbers list ---- library(gtools) bus_numbers = unique( unlist( strsplit( df$bus, ", ") ) )  bus_numbers = mixedsort( bus_numbers )[-c(length(bus_numbers))] tram_numbers = unique(unlist(strsplit(df$tram, ", "))) tram_numbers = mixedsort(tram_numbers)[-c(length(tram_numbers))] trolley_numbers = unique(unlist(strsplit(df$trolley, ", "))) trolley_numbers = mixedsort(trolley_numbers)[-c(length(trolley_numbers))] minibus_numbers = unique(unlist(strsplit(df$minibus, ", "))) minibus_numbers = mixedsort(minibus_numbers)[-c(length(minibus_numbers))] bus_numbers_circled = c("5","10","11","18л","18п","22","27","28","35","35а","37","39","40","42","42а", "45","47","49","51","54","58","60","61","68","69","69а", "78","83","89","90","90а", "94","96","99") minibus_numbers_circled = c("12", "20", "23", "24", "25", "38", "40", "49", "93", "94", "96") trolley_numbers_circled = c("2", "12") tram_numbers_circled = NULL # Routes and stpos distances data.frame ---- #if (!require("geosphere")) { install.packages("geosphere"); require("geosphere") } #if (!require("rgeos")) { install.packages("rgeos"); require("rgeos") } Route = function(df4, stop_n) {     i = dim(df4)[1]     df4 = cbind(df4, 1:dim(df4)[1])     tmp = 1     k = stop_n     df_tmp = df4[k,]     while (i >= 0) {         if (length(k) != dim(df4)[1]) {             set1sp <- SpatialPoints(df4[c(k), c('lon', 'lat')])             set2sp <- SpatialPoints(df4[-c(k), c('lon', 'lat')])             df_tmp2 = df4[-c(k),]             kk = which(gDistance(set1sp, set2sp, byid = TRUE) == min(gDistance(set1sp, set2sp, byid = TRUE)), arr.ind = TRUE)[1, 1]             df_tmp = rbind(df_tmp, df_tmp2[c(kk),])             k = c(k, df_tmp2[kk, 15])         }         i = i - 1     }     return(df_tmp) } Route_length = function(df) {     r_len = NULL     for (k in c(1:(dim(df)[1] - 1))) {         #        set1sp <- SpatialPoints(df[k, c('lon', 'lat')])         #       set2sp <- SpatialPoints(df[k+1, c('lon', 'lat')])         r_len = c(r_len, distm(df[c(k), c('lon', 'lat')], df[c(k + 1), c('lon', 'lat')]))     }     return(r_len) } Route_shortest = function(df4) {     min_r = sum(Route_length(Route(df4, 1)))     min_k = 1     for (i in c(2:dim(df4)[1])) {         r_l_ = sum(Route_length(Route(df4, i)))         if (r_l_ < min_r) {             min_r = r_l_             min_k = i         }     }     return(min_k) } df_routes = function(df_stops, numbers) {     r_l = data.frame(Route_n = NULL, dist = NULL, V1 = NULL, V2 = NULL, V3 = NULL, V4 = NULL, V5 = NULL, V6 = NULL, V7 = NULL, V8 = NULL, V9 = NULL, V10 = NULL, V11 = NULL, V12 = NULL, V13 = NULL, V14 = NULL, V15 = NULL)     for (route_n in numbers) {         cat(paste(".", route_n, ".", sep = ""))         df4 = df[Stops_list_for_route(df_stops, route_n),]         df_tmp = Route(df4, Route_shortest(df4))         r_l = rbind(r_l, cbind(rep(route_n, dim(df_tmp)[1]), c(Route_length(df_tmp), NA), df_tmp))     }     colnames(r_l) = c("route_n", "next_stop_dist", colnames(df))     df_tmp = r_l     del_list = NULL     for (k in c(2:dim(df_tmp)[1])) {         if ((df_tmp$route_n[k - 1] == df_tmp$route_n[k]) &&             (df_tmp$name[k - 1] == df_tmp$name[k]) &&             (df_tmp$next_stop_dist[k - 1] <= 150)) {             # del string             del_list = c(del_list, k - 1)         }     }     #df_tmp[-del_list, 3]     return(df_tmp[-del_list,]) } #df_bus_routes = df_routes(df$bus, bus_numbers) #write.csv2(x = df_bus_routes, file = file.path(dataDir, "Bus routes.csv")) df_bus_routes = read.csv2(file = file.path(dataDir, "Bus routes.csv"))[, - c(1)] #df_minibus_routes = df_routes(df$minibus, minibus_numbers) #write.csv2(x = df_minibus_routes, file = file.path(dataDir, "Minibus routes.csv")) df_minibus_routes = read.csv2(file = file.path(dataDir, "Minibus routes.csv"))[, - c(1)] #df_tram_routes = df_routes(df$tram, tram_numbers) #write.csv2(x = df_trolley_routes, file = file.path(dataDir, "Trolley routes.csv")) df_trolley_routes = read.csv2(file = file.path(dataDir, "Trolley routes.csv"))[, - c(1)] #df_trolley_routes = df_routes(df$trolley, trolley_numbers) #write.csv2(x = df_tram_routes, file = file.path(dataDir, "Tram routes.csv")) df_tram_routes = read.csv2(file = file.path(dataDir, "Tram routes.csv"))[, - c(1)]
map <- GetMap(center = c(df$lat[554], df$lon[554]), zoom = 15,        size = c(640, 640), destfile = file.path(tempdir(), "meuse.png"),         maptype = "mobile", SCALE = 1);
par(cex = 2)
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12)
df3 = df[df$n_bus > 0,]
par(cex = 2)
bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5)
text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 4, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
dev.off()
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 4, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 4, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
dev.off()
dev.off()
bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5)
text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 4, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45)
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 4, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off()
bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5)
text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.2), srt = 45)
pdf(file = paste(plotDir, "/Minibus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Minibus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_minibus > 0,] #par(cex = 2) bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_minibus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.2), srt = 45) dev.off()
png(filename = file.path(plotDir, "Minibus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_minibus > 0,] #par(cex = 2) bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_minibus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.2), srt = 45) dev.off()
png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.2), srt = 45) dev.off()
pdf(file = paste(plotDir, "/Minibus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Minibus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_minibus > 0,] #par(cex = 2) bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_minibus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.2), srt = 45) dev.off()
df3 = df[df$n_minibus > 0,] par(cex = 0.5) bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_minibus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.2), srt = 45)
pdf( file = paste(plotDir, "/Bus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Bus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_bus > 0,] par(cex = 0.5) bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_bus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.2), srt = 45) dev.off() pdf(file = paste(plotDir, "/Minibus routes heat.pdf", sep = ""), width = 7, height = 7, pointsize = 12) #png(filename = file.path(plotDir, "Minibus routes heat.png"), width = 640, height = 640, units = "px", pointsize = 16, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) df3 = df[df$n_minibus > 0,] par(cex = 0.5) bubbleMap( df3, coords = c("lon", "lat"), map,       zcol = 'n_minibus', key.entries = 1 + 2 ^ (0:4), colPalette = colorRampPalette(c("steelblue", "tomato"))(length(1 + 2 ^ (0:4))), do.sqrt = T, alpha = 0.5, verbose = 0.5) text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Stepan Sushko", cex = 5, font = 2, col = adjustcolor("steelblue", alpha.f = 0.2), srt = 45) dev.off()
# Frequncies plots ---- Freq_plot = function(dff, p_title) {      return(ggplot(data = dff) +         geom_bar(stat = "identity", aes(reorder(Var1, Freq), Freq), fill = "cyan4") +         geom_text(aes(reorder(Var1, Freq), label = Freq, y = Freq), size = 3, hjust = -0.1, colour = "dimgray", vjust = 0.25) +         theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + coord_flip() +         scale_y_continuous(breaks = round(seq(0, max(dff$Freq), max(dff$Freq)/25))) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +          ggtitle( p_title )     ) } df_cities = as.data.frame(sort(table(df$`Направление`), decreasing = T)) df_airlines = as.data.frame(sort(table(df$`Авиакомпания`), decreasing = T)) df_jets = as.data.frame(sort(table(df$`Самолёт`), decreasing = T)) p1 = Freq_plot(df_cities, "Рейсов из аэропорта Платов\nпо направлениям (в неделю)") p2 = Freq_plot(df_airlines, "Количество рейсов из аэропорта Платов\nпо авиакомпаниям (в неделю)") p3 = Freq_plot(df_jets, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)") #pdf(file = paste(plotDir, "/Freq_cities.pdf", sep = ""), width = 12, height = 12, pointsize = 10) png(filename = file.path(plotDir, "City_vs_Freq.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5) dev.off() png(filename = file.path(plotDir, "Airline_vs_Freq.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p2 + annotate(geom = "text", x = 9, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') dev.off() png(filename = file.path(plotDir, "Jet_vs_Freq.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p3 + annotate(geom = "text", x = 5, y = 35, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial') dev.off() # Frequncy by Day plot ----  wdays = c( "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс") #weekdays(df$`расписание` ) tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1) df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2 ) df_wd_fly$Var1 = as.numeric( df_wd_fly$Var1 ) - 1 df_wd_fly[ df_wd_fly$Var1 == 0, 1] = 7 dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 4, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 9, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Freq_per_day.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p4 dev.off() tab2 = apply(table(as.integer(format(df$`расписание`, format = "%H")), df$`Направление`), FUN = sum, MARGIN = 1) df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2) df_wd_fly$Var1 = as.numeric(df_wd_fly$Var1) #df_wd_fly[df_wd_fly$Var1 == 0, 1] = 7 dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за неделю") +         annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Freq_per_hour.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p5 dev.off()
if (!require("ggplot2")) { install.packages("ggplot2"); require("ggplot2") }
#if (!require("RCurl")) { install.packages("RCurl"); require("RCurl") }
if (!require("qdap")) { install.packages("qdap"); require("qdap") }
if (!require("rvest")) { install.packages("rvest"); require("rvest") }
plotDir = "C:/Users/stepa/OneDrive/DataScience/Airports/ЯндексТаблоПарсер/Platov/Plots"
dataDir = "C:/Users/stepa/OneDrive/DataScience/Airports/ЯндексТаблоПарсер/Platov"
df = read.csv2( file.path(dataDir, "TimeTable.csv"))[,c(2:12)]
df$lat = as.numeric(as.character(df$lat))
df$lon = as.numeric(as.character(df$lon))
df$`расписание` = as.POSIXct(df$`расписание`)
df$`Направление` = as.character(df$`Направление`)
colnames(df)[11] = "Частота"
# Frequncies plots ---- Freq_plot = function(dff, p_title) {      return(ggplot(data = dff) +         geom_bar(stat = "identity", aes(reorder(Var1, Freq), Freq), fill = "cyan4") +         geom_text(aes(reorder(Var1, Freq), label = Freq, y = Freq), size = 3, hjust = -0.1, colour = "dimgray", vjust = 0.25) +         theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + coord_flip() +         scale_y_continuous(breaks = round(seq(0, max(dff$Freq), max(dff$Freq)/25))) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +          ggtitle( p_title )     ) } df_cities = as.data.frame(sort(table(df$`Направление`), decreasing = T)) df_airlines = as.data.frame(sort(table(df$`Авиакомпания`), decreasing = T)) df_jets = as.data.frame(sort(table(df$`Самолёт`), decreasing = T)) p1 = Freq_plot(df_cities, "Рейсов из аэропорта Платов\nпо направлениям (в неделю)") p2 = Freq_plot(df_airlines, "Количество рейсов из аэропорта Платов\nпо авиакомпаниям (в неделю)") p3 = Freq_plot(df_jets, "Количество рейсов из аэропорта Платов\nпо типам самолётов (в неделю)") #pdf(file = paste(plotDir, "/Freq_cities.pdf", sep = ""), width = 12, height = 12, pointsize = 10) png(filename = file.path(plotDir, "City_vs_Freq.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p1 + annotate(geom = "text", x = 15, y = 50.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5) dev.off() png(filename = file.path(plotDir, "Airline_vs_Freq.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p2 + annotate(geom = "text", x = 9, y = 25.0, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') dev.off() png(filename = file.path(plotDir, "Jet_vs_Freq.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p3 + annotate(geom = "text", x = 5, y = 35, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial') dev.off()
# Frequncy by Day plot ----  wdays = c( "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс") #weekdays(df$`расписание` ) tab2 = apply(table( as.integer(format(df$`расписание`, format = "%w")), df$`Направление`), FUN = sum, MARGIN = 1) df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2 ) df_wd_fly$Var1 = as.numeric( df_wd_fly$Var1 ) - 1 df_wd_fly[ df_wd_fly$Var1 == 0, 1] = 7 dff = df_wd_fly p4 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = 1:7, labels = wdays) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо дням недели") +         annotate(geom = "text", x = 4, y = 17, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 9, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Freq_per_day.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p4 dev.off() tab2 = apply(table(as.integer(format(df$`расписание`, format = "%H")), df$`Направление`), FUN = sum, MARGIN = 1) df_wd_fly = data.frame(Var1 = as.character(names(tab2)), Freq = tab2) df_wd_fly$Var1 = as.numeric(df_wd_fly$Var1) #df_wd_fly[df_wd_fly$Var1 == 0, 1] = 7 dff = df_wd_fly p5 = ggplot(data = dff) +         geom_bar(stat = "identity", aes(Var1, Freq), fill = "cyan4") +         geom_text(aes(Var1, Freq, label = Freq, y = Freq), size = 3, colour = "dimgray", vjust = -0.3) +         #        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +         xlab("") + ylab("") + # coord_flip() +         scale_x_continuous(breaks = df_wd_fly$Var1, labels = df_wd_fly$Var1) +         theme(plot.margin = unit(c(0, 0.2, 0, 0), "cm")) +         ggtitle("Количество рейсов из аэропорта Платов \nпо времени дня за неделю") +         annotate(geom = "text", x = 11, y = 13, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 7, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Freq_per_hour.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p5 dev.off()
# Mosaic plot ---- if (!require("vcd")) { install.packages("vcd"); require("vcd") } tab = table(df$`Авиакомпания`, df$`Направление`) #mosaic(df$`Авиакомпания` ~ df$`Направление`) tab = tab[as.character(df_airlines$Var1), as.character(df_cities$Var1)] #df_cross = as.data.frame.matrix(tab[1:5, 1:5]) #mosaic(tab, legend = T, zero_size = 0, zero_split = T) #strucplot(tab[1:5, 1:5], legend = T, zero_size = 0, labeling = T) #mosaic(~`Направление` + `Авиакомпания`, data = df, zero_size = 0, zero_split = F, keep_aspect_ratio = F, ctx = 0.2) #mosaic(~`Авиакомпания` + `Направление`, data = df, zero_size = 0, legend = T) # png(filename = file.path(plotDir, "Mosaic_Airline_vs_City.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(tab, las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() png(filename = file.path(plotDir, "Mosaic_City_vs_Airline.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(t(tab), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() # АК vs Самолёт tab2 = table(df$`Авиакомпания`, df$`Самолёт`) tab2 = tab2[as.character(df_airlines$Var1), as.character(df_jets$Var1)] png(filename = file.path(plotDir, "Mosaic_Airline_vs_Jet.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot(tab2, las = 2, col = "cyan4", main = "") text(   x = grconvertX(0.5, from = "npc"), y = grconvertY(0.5, from = "npc"),         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", cex = 3, font = 2, col = adjustcolor("steelblue", alpha.f = 0.35), srt = 45) dev.off() png(filename = file.path(plotDir, "Mosaic_Jet_vs_Airline.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) par(mar = rep(.5, 4)) mosaicplot( t(tab2), las = 2, col = "cyan4", main = "") text(x = grconvertX(0.5, from = "npc"), # align to center of plot X axis        y = grconvertY(0.5, from = "npc"), # align to center of plot Y axis         labels = "Степан Сушко\nдля\n       Ростов-Транспорт", # our watermark         cex = 3, font = 2, # large, bold font - hard to miss         col = adjustcolor("steelblue", alpha.f = 0.35), # translucent (0.2 = 20%) red color         srt = 45) # srt = angle of text: 45 degree angle to X axis dev.off()
 # Capacity ---- df_capacity = data.frame(     type = c("Airbus A319", "Boeing 737-800", "Airbus A320", "Сухой Суперджет 100", "Boeing 737-500", "Airbus А321", "Canadair regional jet", "Boeing 737-400", "Embraer EMB 175", "Canadair regional jet"),     capacity = c(134, 175, 164, 95, 132, 199, 76, 159, 80, 76)) df_capacity$type = as.character(df_capacity$type) df_jets$Var1     = as.character(df_jets$Var1) df_jets$`Вместимость` = df_capacity[, 2] df_jets$`Ёмкость`     = df_jets$Freq * df_jets$`Вместимость` df_tmp = df_jets[, c(1, 4)] colnames(df_tmp) = c("Var1", "Freq") p6 = Freq_plot(df_tmp, "Ёмкость рейсов из аэропорта Платов\nпо типам самолётов (в неделю)") + annotate(geom = "text", x = 5, y = 5000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') + ylab(paste("Общая ёмкость по типам (в одном направлении):", sum(df_jets$`Ёмкость`) * 4)) png(filename = file.path(plotDir, "Jet_vs_Capacity.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p6 dev.off() # Пассажиропоток sum(df_jets$`Ёмкость`) * 8 * 0.7 # Ёмкость по направленимям for (i in c(1:dim(df_jets)[1])) {     df[df$`Самолёт` == df_capacity$type[i], 12] = df_capacity$capacity[i] } tab3 = table(df$`Направление`, df$V12)  for (i in c(1:dim(tab3)[1])) {     tab3[i,] = tab3[i,] * as.integer(colnames(tab3)) } df_city_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T)) df_city_capacity = cbind(rownames(df_city_capacity), df_city_capacity) df_city_capacity[,1] = as.character( df_city_capacity[,1]) colnames( df_city_capacity ) = c("Var1", "Freq") sum( df_city_capacity$Freq ) p7 = Freq_plot(df_city_capacity, "Ёмкость из аэропорта Платов\nпо направлениям (в неделю)") +     annotate(geom = "text", x = 15, y = 9000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "City_vs_Capacity.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p7 dev.off() # По АК #for (i in c(1:dim(df_jets)[1])) { #    df[df$`Самолёт` == df_capacity$type[i], 12] = df_capacity$capacity[i] #} tab3 = table(df$`Авиакомпания`, df$V12) for (i in c(1:dim(tab3)[1])) {     tab3[i,] = tab3[i,] * as.integer(colnames(tab3)) } df_airline_capacity = as.data.frame(sort(apply(tab3, MARGIN = 1, sum), decreasing = T)) df_airline_capacity = cbind(rownames(df_airline_capacity), df_airline_capacity) df_airline_capacity[, 1] = as.character(df_airline_capacity[, 1]) colnames(df_airline_capacity) = c("Var1", "Freq") sum(df_airline_capacity$Freq) p8 = Freq_plot(df_airline_capacity, "Ёмкость из аэропорта Платов\nпо авиакомпаниям (в неделю)") +     annotate(geom = "text", x = 9, y = 3000, xend = Inf, yend = Inf, label = 'Степан Сушко\n     Ростов-Транспорт', color = 'white', angle = 45, fontface = 'bold', size = 10, alpha = 0.5, family = 'Arial') png(filename = file.path(plotDir, "Airline_vs_Capacity.png"), width = 800, height = 800, units = "px", pointsize = 12, bg = "white", res = NA, family = "", restoreConsole = TRUE, type = c("cairo-png")) p8 dev.off()
